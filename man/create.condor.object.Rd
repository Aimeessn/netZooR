% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/create.condor.object.R
\name{create.condor.object}
\alias{create.condor.object}
\title{Create list amenable to analysis using \code{condor} package.}
\usage{
create.condor.object(edgelist, return.gcc = TRUE)
}
\arguments{
\item{edgelist}{a data.frame with required colnames 'red' and 'blue'
representing links from the node in the first column to the node in the
second column. An optional third column named 'weight' may be provided
to create a weighted network.}

\item{return.gcc}{if TRUE, returns the giant connected component}
}
\value{
G is an igraph graph object with a 'color' attribute
based on the colnames of edgelist. This can be accessed via
V(g)$color, which returns a vector indicating red/blue. Use V(g)$name
with V(g)$color to identify red/blue node names

edges corresponding to graph G. If return.gcc=TRUE, includes only
those edges in the giant connected component.

Qcoms output from \code{\link{condor.cluster}} or
\code{\link{BRIM}}

modularity \code{NULL} output from \code{\link{condor.cluster}}
or \code{\link{BRIM}}

red.memb \code{NULL} output from \code{\link{condor.cluster}}
or \code{\link{BRIM}}

blue.memb \code{NULL} output from \code{\link{condor.cluster}}
or \code{\link{BRIM}}

qscores \code{NULL} output from \code{\link{condor.qscore}}
}
\description{
Converts an edge list into a \code{list} which is then an input for
other functions in the \code{\link{condor}} package.
}
\examples{
r = c(1,1,1,2,2,2,3,3,3,4,4);
b = c(1,2,3,1,2,4,2,3,4,3,4);
reds <- c("Alice","Sue","Janine","Mary")
blues <- c("Bob","John","Ed","Hank")
elist <- data.frame(red=reds[r],blue=blues[b])
condor.object <- create.condor.object(elist)
}

