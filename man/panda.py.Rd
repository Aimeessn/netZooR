% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PANDA.R
\name{panda.py}
\alias{panda.py}
\title{Run PANDA in R}
\usage{
panda.py(expr, motif = NULL, ppi = NULL, mode_process = "union",
  rm_missing = FALSE)
}
\arguments{
\item{expr}{Character string indicating the file path of expression values file, with each gene(in rows) across samples(in columns).}

\item{motif}{An optional character string indicating the file path of a prior transcription factor binding motifs dataset.
When this argument is not provided, analysis will continue with Pearson correlation matrix.}

\item{ppi}{An optional character string indicating the file path of protein-protein interaction edge dataset.
Also, this can be generated with a list of proteins of interest by \code{\link{source.PPI}}.}

\item{mode_process}{An optional character to define the pre-processing of input dataset, options include "legacy" to the original behavior of PANDA in Python implement,
"interaction" to constrain the TF and gene as interaction across all input datasets, and "union" to take TF union and gene union across all input datasets.
The default value is "union".}

\item{rm_missing}{When mode_process = "legacy", rm_missing is an optional boolean indicating whether to remove genes and TFs not present in all input files. If TRUE, remove all unmatched TF and genes.
if FALSE, keep all tf and genes. The default value is FALSE.}
}
\value{
A list of three itemsï¼š
         Use \code{$panda} to access the standard output of PANDA as data frame, which consists of four columns: 
         "TF", "Gene", "Motif" using 0 or 1 to indicate if this edge belongs to prior motif dataset, and "Score".

         Use \code{$indegree} to access the indegree of PANDA network as data frame, which consists of two columns: "Gene", "Score".

         Use \code{$outdegree} to access the outdegree of PANDA network as data frame, which consists of two columns: "TF", "Score".
}
\description{
\strong{PANDA}(Passing Attributes between Networks for Data Assimilation) is a message-passing model 
to reconstruct gene regulatory network, which integrates multiple sources of biological data-including protein-protein interaction data,
gene expression data, and transcription factor binding motifs data to reconstruct genome-wide, condition-specific regulatory networks.
\href{http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0064832}{[(Glass et al. 2013)])}
This function is designed to run the a derived PANDA implement in Python "netZooPy" \href{https://github.com/netZoo/netZooPy}{netZooPy},
 which is also a Python library of netZooR.
}
\examples{
# take the treated TB dataset as example here.
# refer to the datasets files path in inst/extdat

treated_expression_file_path <- system.file("extdata", "expr4_matched.txt", 
package = "netZooR", mustWork = TRUE)
motif_file_path <- system.file("extdata", "chip_matched.txt", package = "netZooR", mustWork = TRUE)
ppi_file_path <- system.file("extdata", "ppi_matched.txt", package = "netZooR", mustWork = TRUE)


# Run PANDA for treated and control network
treated_all_panda_result <- panda.py(expr = treated_expression_file_path, motif = motif_file_path, 
ppi = ppi_file_path, mode_process="legacy", rm_missing = TRUE )

# access PANDA regulatory network
treated_net <- treated_all_panda_result$panda

# access PANDA regulatory indegree network.
indegree_net <- treated_all_panda_result$indegree

# access PANDA regulatory outdegree networks
outdegree_net <- treated_all_panda_result$outdegree

}
